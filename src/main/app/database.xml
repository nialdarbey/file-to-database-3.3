<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd ">
    <spring:beans>
        <spring:bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <spring:property name="locations">
                <spring:list>
                    <spring:value>classpath:/config.properties</spring:value>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="Derby_Data_Source" class="org.enhydra.jdbc.standard.StandardXADataSource" destroy-method="shutdown">
            <spring:property name="driverName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
            <spring:property name="url" value="jdbc:derby:muleEmbeddedDB;create=true"/>
        </spring:bean>
    </spring:beans>
    <jdbc-ee:connector name="JDBCConnector" transactionPerMessage="false" dataSource-ref="Derby_Data_Source" validateConnections="true" queryTimeout="-1" pollingFrequency="1000" doc:name="Database">
        <jdbc-ee:query key="insert-products" value="insert into products(product_group, product_sub_group, series, product_id) values (#[payload.productGroup], #[payload.productSubGroup], #[payload.series], #[payload.productId])"/>
        <jdbc-ee:query key="select-products" value="select * from products where product_group = #[message.inboundProperties['http.query.params'].group]"/>
    </jdbc-ee:connector>
    <flow name="init_db" doc:name="init_db">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8888" path="db" doc:name=":8888/db/[init|clean]"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties['http.relative.path'] == 'init']">
                <processor-chain>
                    <scripting:component doc:name="Create table">
                        <scripting:script engine="Groovy">
                            <scripting:text><![CDATA[jdbcConnector = muleContext.getRegistry().lookupConnector("JDBCConnector");
                                    qr = jdbcConnector.getQueryRunner();
                                    conn = jdbcConnector.getConnection();
qr.update(conn, "CREATE TABLE products (id int generated always as identity, product_group varchar(256), product_sub_group varchar(50), series varchar(30), product_id varchar(50))");
                                    return "Initialised";]]></scripting:text>
                        </scripting:script>
                    </scripting:component>
                </processor-chain>
            </when>
            <otherwise>
                <processor-chain>
                    <scripting:component doc:name="Groovy">
                        <scripting:script engine="Groovy">
                            <scripting:text><![CDATA[jdbcConnector = muleContext.getRegistry().lookupConnector("JDBCConnector");
                                    qr = jdbcConnector.getQueryRunner();
                                    conn = jdbcConnector.getConnection();
                                    qr.update(conn, "delete from products");
                                    return "Cleaned";]]></scripting:text>
                        </scripting:script>
                    </scripting:component>
                </processor-chain>
            </otherwise>
        </choice>
    </flow>
</mule>
